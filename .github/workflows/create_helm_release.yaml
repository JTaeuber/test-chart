name: Create a release and build and push Helm Chart

on:
  push:
    branches:
      - main
    paths:
      - test-chart/Chart.yaml

jobs:
  create_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      latest_tag: ${{ steps.get_latest_tag.outputs.latest_tag }}
      version: ${{ steps.chart_version.outputs.version }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Extract Chart Version
        id: chart_version
        run: |
          version=$(yq e '.version' ./test-chart/Chart.yaml)
          echo "version=$version" >> $GITHUB_OUTPUT

      - name: Get latest Git tag
        id: get_latest_tag
        run: |
          latest_tag=$(git describe --tags --abbrev=0 || echo "No tags found")
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Create GitHub Release
        if: ${{ steps.get_latest_tag.outputs.latest_tag }} != v${{ steps.chart_version.outputs.version }}
        id: create_tag
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.chart_version.outputs.version }}
          name: v${{ steps.chart_version.outputs.version }}
          generateReleaseNotes: true
          token: ${{ secrets.ACCESS_TOKEN }}

  push_chart:
    runs-on: ubuntu-latest
    needs: create_release
    if: ${{ needs.create_release.outputs.latest_tag }} != v${{ needs.create_release.outputs.version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Set up Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Log in to Helm OCI Registry
        run: |
          helm registry login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          helm registry login ${MTR} -u ${DOCKER_USERNAME} -p ${DOCKER_PASSWORD}
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          MTR: mtr.devops.telekom.de

      - name: Helm Lint, Package, and Push
        run: |
          cd test-chart
          helm lint .
          helm package .
          helm push $(ls *.tgz | head -1) oci://ghcr.io/jtaeuber/charts
          helm push $(ls *.tgz | head -1) oci://${MTR}/${REPO}/charts
        env:
          MTR: mtr.devops.telekom.de
          REPO: ${{secrets.REPO}}

      - name: Dispatch Event to Helm-Charts Repo
        uses: peter-evans/repository-dispatch@v3
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: JTaeuber/helm-charts
          event-type: new-helm-chart-version
          client-payload: '{"chart": "test-chart", "version": "${{ needs.create_release.outputs.version }}"}'
